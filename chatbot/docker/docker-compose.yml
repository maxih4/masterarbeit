services:
  # ---- Key-Value Store (used internally by Milvus) ----
  etcd:
    container_name: milvus-etcd
    image: quay.io/coreos/etcd:v3.5.18
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision         # Compaction mode for storage cleanup
      - ETCD_AUTO_COMPACTION_RETENTION=1000        # Keep last 1000 revisions
      - ETCD_QUOTA_BACKEND_BYTES=4294967296        # 4GB quota
      - ETCD_SNAPSHOT_COUNT=50000                  # Create snapshot after 50k writes
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/etcd:/etcd
    command: etcd -advertise-client-urls=http://etcd:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd
    healthcheck:
      test: ["CMD", "etcdctl", "endpoint", "health"]
      interval: 30s
      timeout: 20s
      retries: 3

  # ---- Object Storage (used internally by Milvus for data persistence) ----
  minio:
    container_name: milvus-minio
    image: minio/minio:RELEASE.2024-05-28T17-19-04Z
    environment:
      MINIO_ACCESS_KEY: minioadmin                # Default credentials (change in prod!)
      MINIO_SECRET_KEY: minioadmin
    ports:
      - "9001:9001"                               # MinIO Console
      - "9000:9000"                               # MinIO API
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/minio:/minio_data
    command: minio server /minio_data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # ---- Vector Database (Milvus standalone mode) ----
  standalone:
    container_name: milvus-standalone
    image: milvusdb/milvus:v2.5.14
    command: ["milvus", "run", "standalone"]
    security_opt:
      - seccomp:unconfined
    environment:
      MINIO_REGION: us-east-1
      ETCD_ENDPOINTS: etcd:2379
      MINIO_ADDRESS: minio:9000
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/milvus:/var/lib/milvus
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9091/healthz"]
      interval: 30s
      start_period: 90s
      timeout: 20s
      retries: 3
    ports:
      - "19530:19530"                             # Milvus gRPC
      - "9091:9091"                               # Milvus REST/Monitoring
    depends_on:
      - "etcd"
      - "minio"

  # ---- Relational Database (Postgres for metadata/app storage) ----
  db:
    container_name: postgres
    image: postgres
    restart: always
    shm_size: 128mb
    ports:
      - 5432:5432                                 # Expose Postgres to host
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: example                  # Default password (change in prod!)
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/postgres:/var/lib/postgresql/data

  # ---- Database UI for Postgres ----
  adminer:
    container_name: postgres-adminer
    image: adminer
    restart: always
    ports:
      - 8080:8080                                 # Adminer UI at http://localhost:8080

networks:
  default:
    name: milvus
